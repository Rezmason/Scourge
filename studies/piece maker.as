const INVERSE:ColorTransform = new ColorTransform(-1, -1, -1, 1, 0xFF, 0xFF, 0xFF);const PLAIN:ColorTransform = new ColorTransform();const PIECE:Array = [];for (var i:int = 0; i < 4; i++) {	var slice:Array = [];	PIECE.push(slice);	for (var j:int = 0; j < 4; j++) {		slice.push(0);		var btn:Sprite = new Sprite();		var shp:Shape = new Shape();		btn.addChild(shp);		addChild(btn);		shp.graphics.lineStyle(0);		shp.graphics.beginFill(0x0);		shp.graphics.drawRect(0, 0, 20, 20);		shp.graphics.endFill();		btn.x = btn.width * j;		btn.y = btn.height * i;		btn.addEventListener(MouseEvent.CLICK, flipPixel);	}}var saveBtn:Sprite = new Sprite();shp = new Shape();saveBtn.addChild(shp);addChild(saveBtn);shp.graphics.lineStyle(0);shp.graphics.beginFill(0x0);shp.graphics.drawRect(0, 0, 20, 20);shp.graphics.endFill();saveBtn.y = btn.height * ++i;saveBtn.addEventListener(MouseEvent.CLICK, print);var id:TextField = new TextField();addChild(id);id.height = 20;id.x = saveBtn.x + 30;id.y = saveBtn.y;id.type = TextFieldType.INPUT;id.background = true;function flipPixel(event:Event):void {	var btn:Sprite = event.currentTarget as Sprite;	var bX:int = btn.x / 20, bY:int = btn.y / 20;	var val:Boolean = PIECE[bY][bX];	PIECE[bY][bX] = val ? 0 : 1;	btn.transform.colorTransform = val ? PLAIN : INVERSE;}function print(event:Event):void {	var list:Array = [];	for (i = 0; i < 4; i++) {		for (j = 0; j < 4; j++) {			getChildAt(i * 4 + j).transform.colorTransform = PLAIN;			if (PIECE[i][j]) {				list.push(i, j);			}			PIECE[i][j] = 0;		}	}	trace(id.text + " [" + list.join(", ") + "]");}