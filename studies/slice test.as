const WIDTH:int = 20;const BLACK:uint =   0xFF000000;const WHITE:uint =   0xFFFFFFFF;const RED:uint =     0xFFFF0000;const YELLOW:uint =  0xFFFFFF00;const GREEN:uint =   0xFF00FF00;const BLUE:uint =    0xFF0000FF;const H_CHANGE:int = 1;const V_CHANGE:int = WIDTH;const U_CHANGE:int = WIDTH + 1;const D_CHANGE:int = WIDTH - 1;var bd:BitmapData = new BitmapData(WIDTH, WIDTH, true, BLACK);var cells:Array = [];addEventListener(MouseEvent.MOUSE_MOVE, evaluatePixel);var sp:Sprite = new Sprite();sp.addChild(new Bitmap(bd));addChild(sp);height = stage.stageHeight;scaleX = scaleY;function evaluatePixel(event:Event = null):void {	var iX:int = int(mouseX), iY:int = int(mouseY);	var index:int = iY * WIDTH + iX;	bd.fillRect(bd.rect, BLACK);		var vec:Vector.<uint> = bd.getVector(bd.rect);		// create the four IDs of the element's slices		var cell:Object = cells[index];	if (cell == null) {		cell = cells[index] = {};		cell.x = index % WIDTH;		cell.y = int(index / WIDTH);		cell.hStart = cell.y      * WIDTH;		cell.hEnd =  (cell.y + 1) * WIDTH;		cell.vStart = cell.x;		cell.vEnd =   cell.x + WIDTH * WIDTH;		cell.uStart = index - (Math.min(        cell.x,             cell.y)) * (WIDTH + 1);		cell.uEnd =   index + (Math.min(WIDTH - cell.x,     WIDTH - cell.y)) * (WIDTH + 1);		cell.dStart = index - (Math.min(WIDTH - cell.x - 1,         cell.y)) * (WIDTH - 1);		cell.dEnd =   index + (Math.min(        cell.x + 1, WIDTH - cell.y)) * (WIDTH - 1);	}	// render the slices for those IDs in four different colors	var ike:int;		for (ike = cell.hStart; ike != cell.hEnd; ike += H_CHANGE) vec[ike] = YELLOW;	for (ike = cell.vStart; ike != cell.vEnd; ike += V_CHANGE) vec[ike] = RED;	for (ike = cell.uStart; ike != cell.uEnd; ike += U_CHANGE) vec[ike] = GREEN;	for (ike = cell.dStart; ike != cell.dEnd; ike += D_CHANGE) vec[ike] = BLUE;		vec[index] = WHITE;		bd.setVector(bd.rect, vec);}