////// // Input parametersvar tv:Array  = [1, 2, 3, 1, 2, 3, 1, 0, 1, 1, 1, 1, 2, 0, 1, 2, 0];var fv:Array = [1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 4, 0, 0, 3, 0, 0];var nc:Array = [];var tID:int = 1;trace(tv.join(""));trace(tv.join("").replace(/0/g, " ").replace(/1/g, "^"));trace("11112310111120120...");linearEatAlgorithm(tv, fv, nc, tID);trace(tv.join(""));var newStr:String = "";for (var i:int = 0; i < tv.length; i++) {	newStr = newStr + (nc.indexOf(i) != -1 ? "|" : " ");}trace(newStr);trace("new cells: [" + nc.join(", ") + "]");trace(fv.join(""));//////function linearEatAlgorithm(teamVec:Array, freshVec:Array, newCells:Array, teamID:int):void {	var firstIndex:int = -2;	var i:int, j:int;		for (i = 0; i < teamVec.length; i++) {		if (teamVec[i] == teamID) {			if (firstIndex != -2 && (freshVec[firstIndex] + freshVec[i] > 0)) {				for (j = firstIndex + 1; j < i; j++) {					//teamVec[j] = teamID;					//freshVec[j] = 1;					newCells.push(j);				}			}			firstIndex = i;		} else if (teamVec[i] == 0) {			firstIndex = -2;		}	}}