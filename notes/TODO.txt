Signed distance fields for text

    http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf
    Then we can mess with glyph fatness!

    Glyphs have separate bounds for difference fields and for character spacing

Represent commands as some intermediary type - not strings, not intrinsic Style types
    A list of elements
        enums, actually
        UIText sends [basic text element] at first
        They send back and forth larger sequences as the user drills down into the auto-completion
    Draw this out

Get interpreter and UIText (and TextDemo) to use signals
    UIText listens for post signals
    Interpreter listens for command signals

HumanPlayer
    Hooks into view somehow; maybe a signal system

NodeView and BoardBody

    Throb

        Now, stop the pools from looping
            Drive the heartbeats by a timer

    Basics
        handleBoardUpdate function
            Each node view checks for a change in board state
                Includes connectivity pass
            (Narratological cues would happen here, like stress level and text unlock)
        handleUIUpdate function
            Interpret UI state
            Check each UI for a change in state
        updateAnimation
            (for propagating waves along slimes' bodies)
        Dialer animation
            Dispatches keyboard interactions
    Orchestrate changes in the game
        Test that board state is properly handled

Command interpreter

InputStyle use
    UIText keeps track of "input spans"
        The indices of the open tag, the body text and the close tag
    Clicking on an input should move the caret
        Text insertion should be as easy as appending to the input span's text value and recompositing
    Clicking past the line should move the caret to the end of the line
        We need to guarantee that there is always something to click here
    Option-left and option-right should move the caret as well

Solidify text update behavior
    If:
        the user WAS at the bottom, or
        the user IS past the bottom, or
        the new text IS the result of interaction,
    -scroll to the new bottom
Scroll indicator (looks like meterstick)

Piece view

Implement noneuclidean walking and running
    add() function should create heading data
    walk() and run() functions should operate on heading data
    heading data should be available after a walk
    Turtle?

Finalize ROPES classes

Save states and save testing
    If the code for a rule changes, the games that used earlier versions of that rule are kind of botched
    How do other games handle this?
    http://www.altdevblogaday.com/2011/07/09/synchronous-rts-engines-and-a-tale-of-desyncs

GDC articles
    http://www.gamasutra.com/view/news/189266/The_technique_LucasArts_used_to_design_its_classic_adventure_games.php
    http://www.gamasutra.com/view/news/189251/7_practical_tips_for_making_a_moral_game.php
    http://www.gamasutra.com/view/news/189345/How_to_use_live_events_to_promote_your_game.php
    http://www.gamasutra.com/view/news/189353/Designing_without_a_pitch__An_FTL_postmortem.php

Hey, this game is a Roguelike!
    Figure out what solutions they have to UI challenges

Make renderer cross-platform (as in, test it on several devices)
    Oh boy...

Checksums

Rewrite the eat rule recursion config property to be an Int of depth
    Rather than being recursive or not recursive at all, let the user specify how many recursive steps to take

And then SPEED EVERYTHING UP
    Use timing output to find the bottlenecks
    Lambda.has is expensive - switch to using tables of ids
    Store useful information, like edges, distance and connectedness values
    Rules that take advantage of these values would expand a graph from an affected square
    Just make sure to update this information when it changes
    Take advantage of linked lists for storing sets of nodes
    Also, haxe.List might be better than Array in some situations

ExternalPlayer
Turn durations

Coarse evaluation
    Number of nodes (filled and enclosed)
    Attribute count (bites and swaps) times attribute range
    Percentage of nodes that are outer edges!
    Number of nodes


A.I. thoughts
    Shannon Type B
    Identify and prune the moves that are just fucking stupid
    Sort by coarse evaluation
    Only consider the top N possibilities
    Alpha-Beta pruning
    Is this even possible?
    Fretting
    aka "Permanent brain"
    Players technically aren't limited to their turn in order to evaluate the board


Later

    Rule-Option Paradigm Entity System
    Create tic tac toe example for ROPES
    Create readme and license files for ROPES
    Migrate tests to tic tac toe
    Move ROPES to a haxe lib

    Maybe turn nodes into aspects
    Store their neighbors on them

    Level Editing
    Just a bunch of rules, aha

    Infinite board
    Expand board when placing a piece
    Tough?

    Destination goal rule
    Allow goal rules to apply to specific players


New UI

    Switch back to MISO font
    Data indicators

    Icons
    Color Transform

    Game board

    Slime
    Hoo boy

    Piece
    Piece Panning
    Bites
    Bite panning
    Bite tracks

    Player info
    hover for mouse
    Press for touch

    Touch mode
    Swipe gesture instead of click for auto expand
    Press instead of hover for hint
    Mouse mode
    Board doesn't zoom for chop
    No swiping at all?

Texture synthesis
    Dots
    Stripes
    Put them on an environmental map
    Use a shader to map the texture onto a blob! :-)

http://code.google.com/p/hxgk/

Game starts as a primer
    History of game states and commands allows player to better understand how games progress

Contact Jason Whong?
