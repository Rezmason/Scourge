Inline text styling and components

        Glyph styles
            There aren't many of them in a body, so they can afford to be complicated
            They must represent each stylistic trait of a glyph

        Approach
            First, extract all the style tags
                Index is unimportant– their index will just be their order in the array
            Turn the style tags into styles
                Reference styles should be resolved into references
                    Defaults to {}

            Then, transform the string to turn style tags into just §'s
                Simplifies the regex considerably
            Include the §'s in the line
                Pad the line to numCols + the number of §s.
            The § is only one char, so it's trivial to detect when going through a line
                When a § is reached, it's interpreted
                Use the current style to transform chars

        §{prop:-1234.5, name:"NAME", basis:"BASIS_NAME"}
        §{NAME} = reference to NAME
            §{} is the default, naturally

        Generally define these at the top of the document and then use them by name

What do the glyphs depict?
    3D views - board, polyominoes
        Node
            Head
            Body
            Cavity
            Bite regions

        Hover state
            "bracketed" and brighter

        Click state
            "telegraphing" ID animation
                Char change
                Scale change
                Characters in ID of string are "dialed" onscreen in the char
                Brackets stay in place until done

    Text view
        All text is stored in rows and columns

        Plain text
            Plain or colored, nothing special
        "Active text"
            Brighter, z up
        Input
            Brackets
                Active bracket is z-up
            Prompt blinks
            Auto-fill text is gray
        Button element
            Same color, inversion, z and perspective projection
            vanishing point is in middle of button
        "Button states"
            Up
                normal
            Over
                white, z up
            Down
                normal color, z Down

    2D polyomino view
        Buttons for manipulating rotation & reflection
        Buttons for choosable piece shortcuts
        Plain text for available piece shortcuts
        Gray text for unavailable piece shortcuts

    Buttons can "telegraph" too, changing z instead of scale


Interprets commands
Translates non-text input into text input
    Clicking a node blinks its ID into the text input
"Bracket" format
    bite [param 1] [param 2] [param 3]
    interpreter converts this into bite 102 when entered
Translates all other game events into human readable output
