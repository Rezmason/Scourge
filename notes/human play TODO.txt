Text commands are boring. Make more interesting ones.

One style per token, with template bases
    Interpreter and commands produce styles that inherit from their template styles
    UIText broadcasts clicks to interpreter, which routes them to the proper command

Style the tokens differently
    Style type should depend on token type
        PLAIN_TEXT style is typed to Style
        SHORTCUT style is typed to ButtonStyle
            Wire it up to a helper.bind(token) function
        CAPSULE style is typed to InputStyle
            Rely on InputStyle to do its work; just set its state
Token clicking ought to work too
    Clicking on an input token should move the carets
    Shortcuts
    Buttons should become non-interactive when they enter the main text

Check out the user stories
    Command names "tokenize" after space
        Caret can't enter them, can only delete them
            Deleting them deletes their other text
    Hint text is "tokenized"
        Caret can't *reach* it
    Button text is obvious, fortunately
        Buttons past the "immediate output" are made inactive by UIText

HumanPlayer
    Hooks into view somehow; maybe a signal system
