Represent commands as some intermediary type - not strings, not intrinsic Style types
    Text view text commands

    A list of elements
        enums, actually
        UIText sends [basic text element] at first
        They send back and forth larger sequences as the user drills down into the auto-completion

    Draw this out
        Command names "tokenize" after space
            Caret can't enter them, can only delete them
                Deleting them deletes their other text
        Hint text is "tokenized"
            Caret can't *reach* it
        Button text is obvious, fortunately
            Buttons past the "immediate output" are made inactive by UIText

Revisit UIText
    Kinda long...
    UIText.interact should be "ignorable" signal

Solidify text update behavior
    If:
        the user WAS at the bottom, or
        the user IS past the bottom, or
        the new text IS the result of interaction,
    -scroll to the new bottom
Scroll indicator (looks like meterstick)

Command interpreter

InputStyle use
    UIText keeps track of "input spans"
        The indices of the open tag, the body text and the close tag
    Clicking on an input should move the caret
        Text insertion should be as easy as appending to the input span's text value and recompositing
    Clicking past the line should move the caret to the end of the line
        We need to guarantee that there is always something to click here
    Option-left and option-right should move the caret as well

Get interpreter and UIText (and TextDemo) to use signals
    UIText listens for post signals
    Interpreter listens for command signals

HumanPlayer
    Hooks into view somehow; maybe a signal system
